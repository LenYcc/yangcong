// Code generated by protoc-gen-go. DO NOT EDIT.
// source: node.proto

/*
Package node is a generated protocol buffer package.

It is generated from these files:
	node.proto

It has these top-level messages:
	RecallRequest
	RecallReply
	User
	Meta
*/
package pb_file

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RecallRequest struct {
	UserId int32   `protobuf:"varint,1,opt,name=UserId" json:"UserId,omitempty"`
	X      float32 `protobuf:"fixed32,2,opt,name=X" json:"X,omitempty"`
	Y      float32 `protobuf:"fixed32,3,opt,name=Y" json:"Y,omitempty"`
	Gender int32   `protobuf:"varint,4,opt,name=Gender" json:"Gender,omitempty"`
	Radius int32   `protobuf:"varint,5,opt,name=Radius" json:"Radius,omitempty"`
}

func (m *RecallRequest) Reset()                    { *m = RecallRequest{} }
func (m *RecallRequest) String() string            { return proto.CompactTextString(m) }
func (*RecallRequest) ProtoMessage()               {}
func (*RecallRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *RecallRequest) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *RecallRequest) GetX() float32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *RecallRequest) GetY() float32 {
	if m != nil {
		return m.Y
	}
	return 0
}

func (m *RecallRequest) GetGender() int32 {
	if m != nil {
		return m.Gender
	}
	return 0
}

func (m *RecallRequest) GetRadius() int32 {
	if m != nil {
		return m.Radius
	}
	return 0
}

type RecallReply struct {
	Users []*User `protobuf:"bytes,1,rep,name=Users" json:"Users,omitempty"`
	Me    *User   `protobuf:"bytes,2,opt,name=Me" json:"Me,omitempty"`
	Meta  *Meta   `protobuf:"bytes,3,opt,name=Meta" json:"Meta,omitempty"`
}

func (m *RecallReply) Reset()                    { *m = RecallReply{} }
func (m *RecallReply) String() string            { return proto.CompactTextString(m) }
func (*RecallReply) ProtoMessage()               {}
func (*RecallReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *RecallReply) GetUsers() []*User {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *RecallReply) GetMe() *User {
	if m != nil {
		return m.Me
	}
	return nil
}

func (m *RecallReply) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

type User struct {
	UserId   int32   `protobuf:"varint,1,opt,name=UserId" json:"UserId,omitempty"`
	Tags     uint32  `protobuf:"varint,2,opt,name=Tags" json:"Tags,omitempty"`
	Gender   int32   `protobuf:"varint,3,opt,name=Gender" json:"Gender,omitempty"`
	Pop      float32 `protobuf:"fixed32,4,opt,name=Pop" json:"Pop,omitempty"`
	Distance float32 `protobuf:"fixed32,5,opt,name=Distance" json:"Distance,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *User) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *User) GetTags() uint32 {
	if m != nil {
		return m.Tags
	}
	return 0
}

func (m *User) GetGender() int32 {
	if m != nil {
		return m.Gender
	}
	return 0
}

func (m *User) GetPop() float32 {
	if m != nil {
		return m.Pop
	}
	return 0
}

func (m *User) GetDistance() float32 {
	if m != nil {
		return m.Distance
	}
	return 0
}

type Meta struct {
	Code    string `protobuf:"bytes,1,opt,name=Code" json:"Code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=Message" json:"Message,omitempty"`
}

func (m *Meta) Reset()                    { *m = Meta{} }
func (m *Meta) String() string            { return proto.CompactTextString(m) }
func (*Meta) ProtoMessage()               {}
func (*Meta) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Meta) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *Meta) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*RecallRequest)(nil), "node.RecallRequest")
	proto.RegisterType((*RecallReply)(nil), "node.RecallReply")
	proto.RegisterType((*User)(nil), "node.User")
	proto.RegisterType((*Meta)(nil), "node.Meta")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for NodeService service

type NodeServiceClient interface {
	Recall(ctx context.Context, in *RecallRequest, opts ...grpc.CallOption) (*RecallReply, error)
}

type nodeServiceClient struct {
	cc *grpc.ClientConn
}

func NewNodeServiceClient(cc *grpc.ClientConn) NodeServiceClient {
	return &nodeServiceClient{cc}
}

func (c *nodeServiceClient) Recall(ctx context.Context, in *RecallRequest, opts ...grpc.CallOption) (*RecallReply, error) {
	out := new(RecallReply)
	err := grpc.Invoke(ctx, "/node.NodeService/Recall", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for NodeService service

type NodeServiceServer interface {
	Recall(context.Context, *RecallRequest) (*RecallReply, error)
}

func RegisterNodeServiceServer(s *grpc.Server, srv NodeServiceServer) {
	s.RegisterService(&_NodeService_serviceDesc, srv)
}

func _NodeService_Recall_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RecallRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServiceServer).Recall(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/node.NodeService/Recall",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServiceServer).Recall(ctx, req.(*RecallRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _NodeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "node.NodeService",
	HandlerType: (*NodeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Recall",
			Handler:    _NodeService_Recall_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "node.proto",
}

func init() { proto.RegisterFile("node.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 294 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0xc1, 0x4b, 0xc3, 0x30,
	0x14, 0xc6, 0x49, 0xda, 0x4d, 0xf7, 0xea, 0x40, 0x23, 0x48, 0xe8, 0x41, 0x4a, 0x4f, 0x3d, 0x0d,
	0x99, 0xde, 0x3d, 0x28, 0x88, 0x87, 0x8a, 0x3c, 0x15, 0xb6, 0x63, 0x6c, 0x1e, 0xa3, 0x58, 0x9a,
	0xda, 0x74, 0xe2, 0xfe, 0x7b, 0x49, 0xe2, 0x86, 0x3d, 0x78, 0xfb, 0xbe, 0xef, 0x35, 0xfd, 0xde,
	0x2f, 0x01, 0x68, 0x8d, 0xa6, 0x45, 0xd7, 0x9b, 0xc1, 0x88, 0xd8, 0xe9, 0xdc, 0xc2, 0x1c, 0xa9,
	0x52, 0x4d, 0x83, 0xf4, 0xb9, 0x25, 0x3b, 0x88, 0x0b, 0x98, 0xbe, 0x59, 0xea, 0x1f, 0xb5, 0x64,
	0x19, 0x2b, 0x26, 0xf8, 0xeb, 0xc4, 0x09, 0xb0, 0x95, 0xe4, 0x19, 0x2b, 0x38, 0xb2, 0x95, 0x73,
	0x6b, 0x19, 0x05, 0xb7, 0x76, 0x67, 0x1e, 0xa8, 0xd5, 0xd4, 0xcb, 0x38, 0x9c, 0x09, 0xce, 0xe5,
	0xa8, 0x74, 0xbd, 0xb5, 0x72, 0x12, 0xf2, 0xe0, 0xf2, 0x0f, 0x48, 0xf6, 0xa5, 0x5d, 0xb3, 0x13,
	0x19, 0x4c, 0x5c, 0x89, 0x95, 0x2c, 0x8b, 0x8a, 0x64, 0x09, 0x0b, 0xbf, 0xa5, 0x8b, 0x30, 0x0c,
	0x44, 0x0a, 0xbc, 0x24, 0xdf, 0x3e, 0x1e, 0xf3, 0x92, 0xc4, 0x25, 0xc4, 0x25, 0x0d, 0xca, 0x6f,
	0x73, 0x98, 0xba, 0x04, 0x7d, 0x9e, 0x7f, 0x43, 0xec, 0xbe, 0xfd, 0x17, 0x4c, 0x40, 0xfc, 0xaa,
	0x36, 0xd6, 0xff, 0x7d, 0x8e, 0x5e, 0xff, 0x01, 0x8a, 0x46, 0x40, 0xa7, 0x10, 0x3d, 0x9b, 0xce,
	0x53, 0x72, 0x74, 0x52, 0xa4, 0x70, 0x7c, 0x5f, 0xdb, 0x41, 0xb5, 0x15, 0x79, 0x48, 0x8e, 0x07,
	0x9f, 0xdf, 0x84, 0xcd, 0x5c, 0xc3, 0x9d, 0xd1, 0xe4, 0x7b, 0x67, 0xe8, 0xb5, 0x90, 0x70, 0x54,
	0x92, 0xb5, 0x6a, 0x13, 0xb0, 0x66, 0xb8, 0xb7, 0xcb, 0x5b, 0x48, 0x9e, 0x8c, 0xa6, 0x17, 0xea,
	0xbf, 0xea, 0x8a, 0xc4, 0x15, 0x4c, 0xc3, 0x5d, 0x89, 0xf3, 0x80, 0x36, 0x7a, 0xae, 0xf4, 0x6c,
	0x1c, 0x76, 0xcd, 0xee, 0x7d, 0xea, 0xdf, 0xf7, 0xfa, 0x27, 0x00, 0x00, 0xff, 0xff, 0x6e, 0xf2,
	0xc8, 0x70, 0xed, 0x01, 0x00, 0x00,
}
